//Insertion at middle (by position)
#include <stdio.h>
#include <stdlib.h>
struct node *create(int);
void insert(struct node*);
void display(struct node*);

struct node
{
    int data;
    struct node *next;
};

int main()
{
    int n;
    struct node *head;
    printf("Enter the number of nodes ");
    scanf("%d",&n);
    head=create(n);
    insert(head);
    display(head);
    return 0;
}

struct node * create(int n)
{
   int i;
   struct node *head;
   struct node *p;
   head=malloc(sizeof(struct node));
   if(head==NULL)
   {
     printf("Memory cannot be allocated");
   }
   else
   {
   printf("\nEnter the data for node : 1 ");
   scanf("%d",&(head->data));
   head->next=NULL;
   p=head;
   for(i=2;i<=n;i++)
   {
       p->next=malloc(sizeof(struct node));
       p=p->next;
       printf("\nEnter the data for node : %d ",i);
       scanf("%d",&(p->data));
   }
   p->next=NULL;
   }
   return(head);
}

void insert(struct node* head)
{
   int key, i;
   struct node *p, *temp;
   p=malloc(sizeof(struct node));
   printf("\nEnter the element to insert ");
   scanf("%d",&(p->data));
   printf("\nEnter the key ");
   scanf("%d",&key);
   temp=head;
   for(i=1;i<key;i++)
   {
       temp=temp->next;
   }
   if(temp!=NULL)
   {
       p->next=temp->next;
       temp->next=p;
   }
}

void display(struct node* head)
{
    struct node *temp;
    printf("\n----Data stored in linked list----");
    temp=head;
    while(temp!=NULL)
    {
        printf("\t%d",temp->data);
         temp=temp->next;
    }
}
