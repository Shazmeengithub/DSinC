//Deletion at middle
#include <stdio.h>
#include <stdlib.h>
struct node *create(int);
void delete (struct node *);
void display(struct node*);

struct nodess
{
    int data;
    struct node *next;
};

int main()
{
    int n;
    struct node *head;
    printf("Enter the number of nodes ");
    scanf("%d",&n);
    head=create(n);
    delete(head);
    display(head);
    return 0;
}

struct node * create(int n)
{
   int i;
   struct node *head;
   struct node *p;
   head=malloc(sizeof(struct node));
   if(head==NULL)
   {
     printf("Memory cannot be allocated");
   }
   else
   {
   printf("\nEnter the data for node : 1 ");
   scanf("%d",&(head->data));
   head->next=NULL;
   p=head;
   for(i=2;i<=n;i++)
   {
       p->next=malloc(sizeof(struct node));
       p=p->next;

       printf("\nEnter the data for node : %d ",i);
       scanf("%d",&(p->data));
   }
   p->next=NULL;
   }
   return(head);
}
 void delete (struct node* head)
{
   struct node *prev=head, *target;
   int x;
   printf("\nEnter the Key data to delete ");
   scanf("%d",&x);
   while(x!=(prev->next)->data && (prev->next)!=NULL)
   {
       prev=prev->next;
   }
   if((prev->next)!=NULL)
   {
       target=prev->next;
       prev->next=(prev->next)->next;
   }
   free (target);
}

void display(struct node* head)
{
    struct node *p;
    printf("\n----Data stored in linked list----\n");
    p=head;
    while(p!=NULL)
    {
        printf("\t%d",p->data);
        p=p->next;
    }
}
