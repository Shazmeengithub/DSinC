//Reversing
#include <stdio.h>
#include <stdlib.h>
struct node *create(int);
struct node *reverse(struct node *);
void display(struct node*);

struct node
{
    int data;
    struct node *next;
};

int main()
{
    int n;
    struct node *head;
    printf("Enter the number of nodes ");
    scanf("%d",&n);
    head=create(n);
    head=reverse(head);
    display(head);
    return 0;
}

struct node * create(int n)
{
   int i;
   struct node *head;
   struct node *p;
   head=malloc(sizeof(struct node));
   if(head==NULL)
   {
     printf("Memory cannot be allocated");
   }
   else
   {
   printf("\nEnter the data for node : 1 ");
   scanf("%d",&(head->data));
   head->next=NULL;
   p=head;
   for(i=2;i<=n;i++)
   {
       p->next=malloc(sizeof(struct node));
       p=p->next;

       printf("\nEnter the data for node : %d ",i);
       scanf("%d",&(p->data));
   }
   p->next=NULL;
   }
   return(head);
}

struct node *reverse (struct node *head)
{
    struct node *p,*q,*r;
    p=NULL,q=head,r=q->next;
    while(q!=NULL)
    {
        q->next=p;
        p=q;
        q=r;
        if(r!=NULL)
        {
            r=r->next;
        }
    }
    return (p);
}

void display(struct node* head)
{
    struct node *p;
    printf("\n----Data stored in linked list----");
    p=head;
    while(p!=NULL)
    {
        printf("\t%d",p->data);
        p=p->next;
    }
}
